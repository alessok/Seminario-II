# Docker Compose para desarrollo del proyecto PYMEs
# =================================================
#
# Este archivo permite levantar el entorno completo de desarrollo
# incluyendo la base de datos para futuras mejoras.

version: '3.8'

services:
  # Aplicación principal
  pymes-dashboard:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: pymes_clustering_app
    ports:
      - "8501:8501"
    volumes:
      # Montar código para desarrollo (hot reload)
      - .:/app
      # Persistir datos
      - ./data:/app/data
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=poll
    restart: unless-stopped
    networks:
      - pymes-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos PostgreSQL (para futuras mejoras)
  postgres:
    image: postgres:13-alpine
    container_name: pymes_postgres
    environment:
      POSTGRES_DB: pymes_clustering
      POSTGRES_USER: pymes_user
      POSTGRES_PASSWORD: pymes_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pymes-network
    restart: unless-stopped

  # Redis para cache (opcional, para optimización futura)
  redis:
    image: redis:6-alpine
    container_name: pymes_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pymes-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx como proxy reverso (para producción)
  nginx:
    image: nginx:alpine
    container_name: pymes_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - pymes-dashboard
    networks:
      - pymes-network
    restart: unless-stopped
    profiles:
      - production

# Volúmenes persistentes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Red personalizada
networks:
  pymes-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
